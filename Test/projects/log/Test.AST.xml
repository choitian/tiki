<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
<decl_unit>
<decl_import>
<decl_package_name>
<decl_package_name>
<id>lang</id>
</decl_package_name>
<id>MathUtils</id>
</decl_package_name>
</decl_import>
<decl_import>
<decl_package_name>
<decl_package_name>
<id>lang</id>
</decl_package_name>
<id>FibonacciSequenceGenerator</id>
</decl_package_name>
</decl_import>
<decl_class_definition>
<name>Test</name>
<decl_method_definition>
<decl_specifiers>
<decl_specifier>
<value>static</value>
</decl_specifier>
<decl_specifier>
<kind>primitive</kind>
<value>void</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_method>
<id>test__qsort</id>
</decl_declarator_method>
<stmt_compound>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_array>
<decl_declarator_id>
<id>result</id>
</decl_declarator_id>
</decl_declarator_array>
</decl_declaration>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>size</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>10</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<stmt_exp>
<exp_ASSIGN>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<exp_NEWA>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<exp_SCOPE_NAME>
<id>size</id>
</exp_SCOPE_NAME>
</exp_NEWA>
</exp_ASSIGN>
</stmt_exp>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>size</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_ASSIGN>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>Math</id>
</exp_SCOPE_NAME>
<id>random</id>
</exp_SCOPE_NAME>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
<exp_INTEGER>
<value>9999</value>
</exp_INTEGER>
</exp_INVOKE>
</exp_ASSIGN>
</stmt_exp>
</stmt_compound>
</stmt_for>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"result initialized:"</value>
</exp_STRING>
</exp_INVOKE>
</stmt_exp>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"%5d "</value>
</exp_STRING>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
</exp_INVOKE>
</stmt_exp>
</stmt_for>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"\n"</value>
</exp_STRING>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>MathUtils</id>
</exp_SCOPE_NAME>
<id>qsort</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
<exp_BINARY>
<op>SUB</op>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
<exp_INTEGER>
<value>1</value>
</exp_INTEGER>
</exp_BINARY>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"result initialized:"</value>
</exp_STRING>
</exp_INVOKE>
</stmt_exp>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"%5d "</value>
</exp_STRING>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</stmt_for>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"\n"</value>
</exp_STRING>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</decl_method_definition>
<decl_method_definition>
<decl_specifiers>
<decl_specifier>
<value>static</value>
</decl_specifier>
<decl_specifier>
<kind>primitive</kind>
<value>void</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_method>
<id>test__FibonacciSequence</id>
</decl_declarator_method>
<stmt_compound>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_array>
<decl_declarator_id>
<id>result</id>
</decl_declarator_id>
</decl_declarator_array>
<decl_initializer>
<exp_NEWA>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<exp_INTEGER>
<value>15</value>
</exp_INTEGER>
</exp_NEWA>
</decl_initializer>
</decl_declaration>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>class</kind>
<exp_SCOPE_NAME>
<id>FibonacciSequenceGenerator</id>
</exp_SCOPE_NAME>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>fsg</id>
</decl_declarator_id>
<decl_initializer>
<exp_NEW>
<decl_specifiers>
<decl_specifier>
<kind>class</kind>
<exp_SCOPE_NAME>
<id>FibonacciSequenceGenerator</id>
</exp_SCOPE_NAME>
</decl_specifier>
</decl_specifiers>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_NEW>
</decl_initializer>
</decl_declaration>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"fsg.nn: %5d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>fsg</id>
</exp_SCOPE_NAME>
<id>nn</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"fsg.nn: %5d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>fsg</id>
</exp_SCOPE_NAME>
<id>nnn</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"fsg.nn: %5d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>FibonacciSequenceGenerator</id>
</exp_SCOPE_NAME>
<id>nnn</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_ASSIGN>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>fsg</id>
</exp_SCOPE_NAME>
<id>generate</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</exp_ASSIGN>
</stmt_exp>
</stmt_compound>
</stmt_for>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"result initialized:"</value>
</exp_STRING>
</exp_INVOKE>
</stmt_exp>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"%5d "</value>
</exp_STRING>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>result</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</stmt_for>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"\n"</value>
</exp_STRING>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</decl_method_definition>
<decl_method_definition>
<decl_specifiers>
<decl_specifier>
<value>static</value>
</decl_specifier>
<decl_specifier>
<kind>primitive</kind>
<value>void</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_method>
<id>test__PI</id>
</decl_declarator_method>
<stmt_compound>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>float</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>PI</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>4</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>boolean</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>plus</id>
</decl_declarator_id>
<decl_initializer>
<exp_BOOLEAN>
<value>false</value>
</exp_BOOLEAN>
</decl_initializer>
</decl_declaration>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>3</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_INTEGER>
<value>99999</value>
</exp_INTEGER>
</exp_BINARY>
<exp_ASSIGN>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_BINARY>
<op>ADD</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_INTEGER>
<value>2</value>
</exp_INTEGER>
</exp_BINARY>
</exp_ASSIGN>
<stmt_compound>
<stmt_if>
<exp_SCOPE_NAME>
<id>plus</id>
</exp_SCOPE_NAME>
<stmt_compound>
<stmt_exp>
<exp_ASSIGN>
<exp_SCOPE_NAME>
<id>PI</id>
</exp_SCOPE_NAME>
<exp_BINARY>
<op>ADD</op>
<exp_SCOPE_NAME>
<id>PI</id>
</exp_SCOPE_NAME>
<exp_BINARY>
<op>DIV</op>
<exp_FLOATING>
<value>4.0</value>
</exp_FLOATING>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_BINARY>
</exp_BINARY>
</exp_ASSIGN>
</stmt_exp>
</stmt_compound>
<stmt_compound>
<stmt_exp>
<exp_ASSIGN>
<exp_SCOPE_NAME>
<id>PI</id>
</exp_SCOPE_NAME>
<exp_BINARY>
<op>SUB</op>
<exp_SCOPE_NAME>
<id>PI</id>
</exp_SCOPE_NAME>
<exp_BINARY>
<op>DIV</op>
<exp_FLOATING>
<value>4.0</value>
</exp_FLOATING>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_BINARY>
</exp_BINARY>
</exp_ASSIGN>
</stmt_exp>
</stmt_compound>
</stmt_if>
<stmt_exp>
<exp_ASSIGN>
<exp_SCOPE_NAME>
<id>plus</id>
</exp_SCOPE_NAME>
<exp_NOT>
<exp_SCOPE_NAME>
<id>plus</id>
</exp_SCOPE_NAME>
</exp_NOT>
</exp_ASSIGN>
</stmt_exp>
</stmt_compound>
</stmt_for>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"%f\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<id>PI</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</decl_method_definition>
<decl_method_definition>
<decl_specifiers>
<decl_specifier>
<value>static</value>
</decl_specifier>
<decl_specifier>
<kind>primitive</kind>
<value>void</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_method>
<id>test__MultidimensionalArrayA</id>
</decl_declarator_method>
<stmt_compound>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_array>
<decl_declarator_id>
<id>dimensional_1</id>
</decl_declarator_id>
</decl_declarator_array>
<decl_initializer>
<decl_array_initializer>
<decl_initializer>
<exp_INTEGER>
<value>3</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>6</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>9</value>
</exp_INTEGER>
</decl_initializer>
</decl_array_initializer>
</decl_initializer>
</decl_declaration>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_array>
<decl_declarator_id>
<id>dimensional_3</id>
</decl_declarator_id>
</decl_declarator_array>
<decl_initializer>
<decl_array_initializer>
<decl_initializer>
<decl_array_initializer>
<decl_initializer>
<decl_array_initializer>
<decl_initializer>
<exp_INTEGER>
<value>1</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>2</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>3</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>4</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>5</value>
</exp_INTEGER>
</decl_initializer>
</decl_array_initializer>
</decl_initializer>
<decl_initializer>
<exp_SCOPE_NAME>
<id>dimensional_1</id>
</exp_SCOPE_NAME>
</decl_initializer>
</decl_array_initializer>
</decl_initializer>
<decl_initializer>
<decl_array_initializer>
<decl_initializer>
<decl_array_initializer>
<decl_initializer>
<exp_INTEGER>
<value>1</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>2</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>3</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>4</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>5</value>
</exp_INTEGER>
</decl_initializer>
</decl_array_initializer>
</decl_initializer>
<decl_initializer>
<decl_array_initializer/>
</decl_initializer>
<decl_initializer>
<decl_array_initializer>
<decl_initializer>
<exp_INTEGER>
<value>1</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>1</value>
</exp_INTEGER>
</decl_initializer>
<decl_initializer>
<exp_INTEGER>
<value>1</value>
</exp_INTEGER>
</decl_initializer>
</decl_array_initializer>
</decl_initializer>
</decl_array_initializer>
</decl_initializer>
</decl_array_initializer>
</decl_initializer>
</decl_declaration>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>j</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
<exp_FSELECT>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<name>length</name>
</exp_FSELECT>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>k</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>k</id>
</exp_SCOPE_NAME>
<exp_FSELECT>
<exp_INDEX>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<name>length</name>
</exp_FSELECT>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>k</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"dimensional_3[%d][%d][%d] = %d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>k</id>
</exp_SCOPE_NAME>
<exp_INDEX>
<exp_INDEX>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_SCOPE_NAME>
<id>k</id>
</exp_SCOPE_NAME>
</exp_INDEX>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</stmt_for>
</stmt_compound>
</stmt_for>
</stmt_compound>
</stmt_for>
</stmt_compound>
</decl_method_definition>
<decl_method_definition>
<decl_specifiers>
<decl_specifier>
<value>static</value>
</decl_specifier>
<decl_specifier>
<kind>primitive</kind>
<value>void</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_method>
<id>test__MultidimensionalArrayB</id>
</decl_declarator_method>
<stmt_compound>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_array>
<decl_declarator_id>
<id>dimensional_3</id>
</decl_declarator_id>
</decl_declarator_array>
</decl_declaration>
<stmt_exp>
<exp_ASSIGN>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_NEWA>
<decl_specifiers>
<decl_specifier>
<kind>class</kind>
<exp_SCOPE_NAME>
<id>Object</id>
</exp_SCOPE_NAME>
</decl_specifier>
</decl_specifiers>
<exp_INTEGER>
<value>2</value>
</exp_INTEGER>
</exp_NEWA>
</exp_ASSIGN>
</stmt_exp>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_ASSIGN>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_NEWA>
<decl_specifiers>
<decl_specifier>
<kind>class</kind>
<exp_SCOPE_NAME>
<id>Object</id>
</exp_SCOPE_NAME>
</decl_specifier>
</decl_specifiers>
<exp_INTEGER>
<value>3</value>
</exp_INTEGER>
</exp_NEWA>
</exp_ASSIGN>
</stmt_exp>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>j</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
<exp_FSELECT>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<name>length</name>
</exp_FSELECT>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_ASSIGN>
<exp_INDEX>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_NEWA>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<exp_INTEGER>
<value>4</value>
</exp_INTEGER>
</exp_NEWA>
</exp_ASSIGN>
</stmt_exp>
</stmt_compound>
</stmt_for>
</stmt_compound>
</stmt_for>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>j</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
<exp_FSELECT>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<name>length</name>
</exp_FSELECT>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>k</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>k</id>
</exp_SCOPE_NAME>
<exp_FSELECT>
<exp_INDEX>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<name>length</name>
</exp_FSELECT>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>k</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"dimensional_3[%d][%d][%d] = %d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>k</id>
</exp_SCOPE_NAME>
<exp_INDEX>
<exp_INDEX>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>dimensional_3</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_SCOPE_NAME>
<id>j</id>
</exp_SCOPE_NAME>
</exp_INDEX>
<exp_SCOPE_NAME>
<id>k</id>
</exp_SCOPE_NAME>
</exp_INDEX>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</stmt_for>
</stmt_compound>
</stmt_for>
</stmt_compound>
</stmt_for>
</stmt_compound>
</decl_method_definition>
<decl_method_definition>
<decl_specifiers>
<decl_specifier>
<value>static</value>
</decl_specifier>
<decl_specifier>
<kind>primitive</kind>
<value>void</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_method>
<id>test__VarargA</id>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>size</id>
</decl_declarator_id>
</decl_declaration>
<decl_vararg_parameter>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<name>maxs</name>
</decl_vararg_parameter>
</decl_declarator_method>
<stmt_compound>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"size = %d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<id>size</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_ASSIGN>
<exp_SCOPE_NAME>
<id>size</id>
</exp_SCOPE_NAME>
<exp_INTEGER>
<value>777</value>
</exp_INTEGER>
</exp_ASSIGN>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>maxs</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_COMMA>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>size</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
</exp_COMMA>
<stmt_compound>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"maxs[%d] = %d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>maxs</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</stmt_for>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"size = %d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<id>size</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</decl_method_definition>
<decl_method_definition>
<decl_specifiers>
<decl_specifier>
<value>static</value>
</decl_specifier>
<decl_specifier>
<kind>primitive</kind>
<value>void</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_method>
<id>test__VarargB</id>
<decl_vararg_parameter>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<name>maxs</name>
</decl_vararg_parameter>
</decl_declarator_method>
<stmt_compound>
<stmt_for>
<decl_declaration>
<decl_specifiers>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_id>
<id>i</id>
</decl_declarator_id>
<decl_initializer>
<exp_INTEGER>
<value>0</value>
</exp_INTEGER>
</decl_initializer>
</decl_declaration>
<exp_BINARY>
<op>LESS</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>maxs</id>
</exp_SCOPE_NAME>
<id>length</id>
</exp_SCOPE_NAME>
</exp_BINARY>
<exp_INCREMENT>
<op>POST_INC</op>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INCREMENT>
<stmt_compound>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>System</id>
</exp_SCOPE_NAME>
<id>print</id>
</exp_SCOPE_NAME>
<exp_STRING>
<value>"maxs[%d] = %d\n"</value>
</exp_STRING>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
<exp_INDEX>
<exp_SCOPE_NAME>
<id>maxs</id>
</exp_SCOPE_NAME>
<exp_SCOPE_NAME>
<id>i</id>
</exp_SCOPE_NAME>
</exp_INDEX>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</stmt_for>
</stmt_compound>
</decl_method_definition>
<decl_method_definition>
<decl_specifiers>
<decl_specifier>
<value>static</value>
</decl_specifier>
<decl_specifier>
<kind>primitive</kind>
<value>int</value>
</decl_specifier>
</decl_specifiers>
<decl_declarator_method>
<id>main</id>
</decl_declarator_method>
<stmt_compound>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<id>test__qsort</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<id>test__FibonacciSequence</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<id>test__PI</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<id>test__MultidimensionalArrayA</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<id>test__MultidimensionalArrayB</id>
</exp_SCOPE_NAME>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<id>test__VarargA</id>
</exp_SCOPE_NAME>
<exp_INTEGER>
<value>666</value>
</exp_INTEGER>
<exp_INTEGER>
<value>1</value>
</exp_INTEGER>
<exp_INTEGER>
<value>3</value>
</exp_INTEGER>
<exp_INTEGER>
<value>5</value>
</exp_INTEGER>
<exp_INTEGER>
<value>7</value>
</exp_INTEGER>
<exp_INTEGER>
<value>11</value>
</exp_INTEGER>
</exp_INVOKE>
</stmt_exp>
<stmt_exp>
<exp_INVOKE>
<exp_SCOPE_NAME>
<id>test__VarargB</id>
</exp_SCOPE_NAME>
<exp_INTEGER>
<value>666</value>
</exp_INTEGER>
<exp_INTEGER>
<value>1</value>
</exp_INTEGER>
<exp_INTEGER>
<value>3</value>
</exp_INTEGER>
<exp_INTEGER>
<value>5</value>
</exp_INTEGER>
<exp_INTEGER>
<value>7</value>
</exp_INTEGER>
<exp_INTEGER>
<value>11</value>
</exp_INTEGER>
</exp_INVOKE>
</stmt_exp>
</stmt_compound>
</decl_method_definition>
</decl_class_definition>
</decl_unit>
</root>
